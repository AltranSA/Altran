#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Altran.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Altran")]
	public partial class DCAltranDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCatBanco(Altran.Data.Entities.CatBanco instance);
    partial void UpdateCatBanco(Altran.Data.Entities.CatBanco instance);
    partial void DeleteCatBanco(Altran.Data.Entities.CatBanco instance);
    partial void InsertCatColonia(Altran.Data.Entities.CatColonia instance);
    partial void UpdateCatColonia(Altran.Data.Entities.CatColonia instance);
    partial void DeleteCatColonia(Altran.Data.Entities.CatColonia instance);
    partial void InsertCatDocumentoCertifica(Altran.Data.Entities.CatDocumentoCertifica instance);
    partial void UpdateCatDocumentoCertifica(Altran.Data.Entities.CatDocumentoCertifica instance);
    partial void DeleteCatDocumentoCertifica(Altran.Data.Entities.CatDocumentoCertifica instance);
    partial void InsertCatEmpleado(Altran.Data.Entities.CatEmpleado instance);
    partial void UpdateCatEmpleado(Altran.Data.Entities.CatEmpleado instance);
    partial void DeleteCatEmpleado(Altran.Data.Entities.CatEmpleado instance);
    partial void InsertCatEstado(Altran.Data.Entities.CatEstado instance);
    partial void UpdateCatEstado(Altran.Data.Entities.CatEstado instance);
    partial void DeleteCatEstado(Altran.Data.Entities.CatEstado instance);
    partial void InsertCatMarcaVehiculo(Altran.Data.Entities.CatMarcaVehiculo instance);
    partial void UpdateCatMarcaVehiculo(Altran.Data.Entities.CatMarcaVehiculo instance);
    partial void DeleteCatMarcaVehiculo(Altran.Data.Entities.CatMarcaVehiculo instance);
    partial void InsertCatModeloVehiculo(Altran.Data.Entities.CatModeloVehiculo instance);
    partial void UpdateCatModeloVehiculo(Altran.Data.Entities.CatModeloVehiculo instance);
    partial void DeleteCatModeloVehiculo(Altran.Data.Entities.CatModeloVehiculo instance);
    partial void InsertCatMovimiento(Altran.Data.Entities.CatMovimiento instance);
    partial void UpdateCatMovimiento(Altran.Data.Entities.CatMovimiento instance);
    partial void DeleteCatMovimiento(Altran.Data.Entities.CatMovimiento instance);
    partial void InsertCatMunicipio(Altran.Data.Entities.CatMunicipio instance);
    partial void UpdateCatMunicipio(Altran.Data.Entities.CatMunicipio instance);
    partial void DeleteCatMunicipio(Altran.Data.Entities.CatMunicipio instance);
    partial void InsertCatNivelEscolar(Altran.Data.Entities.CatNivelEscolar instance);
    partial void UpdateCatNivelEscolar(Altran.Data.Entities.CatNivelEscolar instance);
    partial void DeleteCatNivelEscolar(Altran.Data.Entities.CatNivelEscolar instance);
    partial void InsertCatPai(Altran.Data.Entities.CatPai instance);
    partial void UpdateCatPai(Altran.Data.Entities.CatPai instance);
    partial void DeleteCatPai(Altran.Data.Entities.CatPai instance);
    partial void InsertCatParentesco(Altran.Data.Entities.CatParentesco instance);
    partial void UpdateCatParentesco(Altran.Data.Entities.CatParentesco instance);
    partial void DeleteCatParentesco(Altran.Data.Entities.CatParentesco instance);
    partial void InsertCatProfesion(Altran.Data.Entities.CatProfesion instance);
    partial void UpdateCatProfesion(Altran.Data.Entities.CatProfesion instance);
    partial void DeleteCatProfesion(Altran.Data.Entities.CatProfesion instance);
    partial void InsertCatStatusEscolar(Altran.Data.Entities.CatStatusEscolar instance);
    partial void UpdateCatStatusEscolar(Altran.Data.Entities.CatStatusEscolar instance);
    partial void DeleteCatStatusEscolar(Altran.Data.Entities.CatStatusEscolar instance);
    partial void InsertCatTipoSangre(Altran.Data.Entities.CatTipoSangre instance);
    partial void UpdateCatTipoSangre(Altran.Data.Entities.CatTipoSangre instance);
    partial void DeleteCatTipoSangre(Altran.Data.Entities.CatTipoSangre instance);
    partial void InsertCatTipoTelefono(Altran.Data.Entities.CatTipoTelefono instance);
    partial void UpdateCatTipoTelefono(Altran.Data.Entities.CatTipoTelefono instance);
    partial void DeleteCatTipoTelefono(Altran.Data.Entities.CatTipoTelefono instance);
    partial void InsertCatTipoVehiculo(Altran.Data.Entities.CatTipoVehiculo instance);
    partial void UpdateCatTipoVehiculo(Altran.Data.Entities.CatTipoVehiculo instance);
    partial void DeleteCatTipoVehiculo(Altran.Data.Entities.CatTipoVehiculo instance);
    partial void InsertTblContactoAccidente(Altran.Data.Entities.TblContactoAccidente instance);
    partial void UpdateTblContactoAccidente(Altran.Data.Entities.TblContactoAccidente instance);
    partial void DeleteTblContactoAccidente(Altran.Data.Entities.TblContactoAccidente instance);
    partial void InsertTblDatosContacto(Altran.Data.Entities.TblDatosContacto instance);
    partial void UpdateTblDatosContacto(Altran.Data.Entities.TblDatosContacto instance);
    partial void DeleteTblDatosContacto(Altran.Data.Entities.TblDatosContacto instance);
    partial void InsertTblDatosLaborale(Altran.Data.Entities.TblDatosLaborale instance);
    partial void UpdateTblDatosLaborale(Altran.Data.Entities.TblDatosLaborale instance);
    partial void DeleteTblDatosLaborale(Altran.Data.Entities.TblDatosLaborale instance);
    partial void InsertTblDireccion(Altran.Data.Entities.TblDireccion instance);
    partial void UpdateTblDireccion(Altran.Data.Entities.TblDireccion instance);
    partial void DeleteTblDireccion(Altran.Data.Entities.TblDireccion instance);
    partial void InsertTblDocumentoEstudio(Altran.Data.Entities.TblDocumentoEstudio instance);
    partial void UpdateTblDocumentoEstudio(Altran.Data.Entities.TblDocumentoEstudio instance);
    partial void DeleteTblDocumentoEstudio(Altran.Data.Entities.TblDocumentoEstudio instance);
    partial void InsertTblEstudio(Altran.Data.Entities.TblEstudio instance);
    partial void UpdateTblEstudio(Altran.Data.Entities.TblEstudio instance);
    partial void DeleteTblEstudio(Altran.Data.Entities.TblEstudio instance);
    partial void InsertTblFamiliar(Altran.Data.Entities.TblFamiliar instance);
    partial void UpdateTblFamiliar(Altran.Data.Entities.TblFamiliar instance);
    partial void DeleteTblFamiliar(Altran.Data.Entities.TblFamiliar instance);
    partial void InsertTblPerfilEstudio(Altran.Data.Entities.TblPerfilEstudio instance);
    partial void UpdateTblPerfilEstudio(Altran.Data.Entities.TblPerfilEstudio instance);
    partial void DeleteTblPerfilEstudio(Altran.Data.Entities.TblPerfilEstudio instance);
    partial void InsertTblTarjetaBancaria(Altran.Data.Entities.TblTarjetaBancaria instance);
    partial void UpdateTblTarjetaBancaria(Altran.Data.Entities.TblTarjetaBancaria instance);
    partial void DeleteTblTarjetaBancaria(Altran.Data.Entities.TblTarjetaBancaria instance);
    partial void InsertTblVehiculo(Altran.Data.Entities.TblVehiculo instance);
    partial void UpdateTblVehiculo(Altran.Data.Entities.TblVehiculo instance);
    partial void DeleteTblVehiculo(Altran.Data.Entities.TblVehiculo instance);
    partial void InsertCatNacionalidad(Altran.Data.Entities.CatNacionalidad instance);
    partial void UpdateCatNacionalidad(Altran.Data.Entities.CatNacionalidad instance);
    partial void DeleteCatNacionalidad(Altran.Data.Entities.CatNacionalidad instance);
    partial void InsertCatEmpresa(Altran.Data.Entities.CatEmpresa instance);
    partial void UpdateCatEmpresa(Altran.Data.Entities.CatEmpresa instance);
    partial void DeleteCatEmpresa(Altran.Data.Entities.CatEmpresa instance);
    partial void InsertCatProyectoEmpresa(Altran.Data.Entities.CatProyectoEmpresa instance);
    partial void UpdateCatProyectoEmpresa(Altran.Data.Entities.CatProyectoEmpresa instance);
    partial void DeleteCatProyectoEmpresa(Altran.Data.Entities.CatProyectoEmpresa instance);
    #endregion
		
		public DCAltranDataContext() : 
				base(global::Altran.Data.Properties.Settings.Default.AltranConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCAltranDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCAltranDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCAltranDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCAltranDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatBanco> CatBancos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatBanco>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatColonia> CatColonias
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatColonia>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatDocumentoCertifica> CatDocumentoCertificas
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatDocumentoCertifica>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatEmpleado> CatEmpleados
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatEmpleado>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatEstado> CatEstados
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatEstado>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatMarcaVehiculo> CatMarcaVehiculos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatMarcaVehiculo>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatModeloVehiculo> CatModeloVehiculos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatModeloVehiculo>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatMovimiento> CatMovimientos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatMovimiento>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatMunicipio> CatMunicipios
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatMunicipio>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatNivelEscolar> CatNivelEscolars
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatNivelEscolar>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatPai> CatPais
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatPai>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatParentesco> CatParentescos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatParentesco>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatProfesion> CatProfesions
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatProfesion>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatStatusEscolar> CatStatusEscolars
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatStatusEscolar>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatTipoSangre> CatTipoSangres
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatTipoSangre>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatTipoTelefono> CatTipoTelefonos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatTipoTelefono>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatTipoVehiculo> CatTipoVehiculos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatTipoVehiculo>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblContactoAccidente> TblContactoAccidentes
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblContactoAccidente>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblDatosContacto> TblDatosContactos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblDatosContacto>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblDatosLaborale> TblDatosLaborales
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblDatosLaborale>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblDireccion> TblDireccions
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblDireccion>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblDocumentoEstudio> TblDocumentoEstudios
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblDocumentoEstudio>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblEstudio> TblEstudios
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblEstudio>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblFamiliar> TblFamiliars
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblFamiliar>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblPerfilEstudio> TblPerfilEstudios
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblPerfilEstudio>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblTarjetaBancaria> TblTarjetaBancarias
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblTarjetaBancaria>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.TblVehiculo> TblVehiculos
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.TblVehiculo>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatNacionalidad> CatNacionalidads
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatNacionalidad>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatEmpresa> CatEmpresas
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatEmpresa>();
			}
		}
		
		public System.Data.Linq.Table<Altran.Data.Entities.CatProyectoEmpresa> CatProyectoEmpresas
		{
			get
			{
				return this.GetTable<Altran.Data.Entities.CatProyectoEmpresa>();
			}
		}
	}
}
namespace Altran.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatBancos")]
	public partial class CatBanco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblTarjetaBancaria> _TblTarjetaBancarias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatBanco()
		{
			this._TblTarjetaBancarias = new EntitySet<TblTarjetaBancaria>(new Action<TblTarjetaBancaria>(this.attach_TblTarjetaBancarias), new Action<TblTarjetaBancaria>(this.detach_TblTarjetaBancarias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(200)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatBanco_TblTarjetaBancaria", Storage="_TblTarjetaBancarias", ThisKey="id", OtherKey="idBanco")]
		public EntitySet<TblTarjetaBancaria> TblTarjetaBancarias
		{
			get
			{
				return this._TblTarjetaBancarias;
			}
			set
			{
				this._TblTarjetaBancarias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatBanco = this;
		}
		
		private void detach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatBanco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatColonia")]
	public partial class CatColonia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private int _intCp;
		
		private System.Nullable<int> _idMunicipio;
		
		private EntityRef<CatMunicipio> _CatMunicipio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnintCpChanging(int value);
    partial void OnintCpChanged();
    partial void OnidMunicipioChanging(System.Nullable<int> value);
    partial void OnidMunicipioChanged();
    #endregion
		
		public CatColonia()
		{
			this._CatMunicipio = default(EntityRef<CatMunicipio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intCp", DbType="Int NOT NULL")]
		public int intCp
		{
			get
			{
				return this._intCp;
			}
			set
			{
				if ((this._intCp != value))
				{
					this.OnintCpChanging(value);
					this.SendPropertyChanging();
					this._intCp = value;
					this.SendPropertyChanged("intCp");
					this.OnintCpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMunicipio", DbType="Int")]
		public System.Nullable<int> idMunicipio
		{
			get
			{
				return this._idMunicipio;
			}
			set
			{
				if ((this._idMunicipio != value))
				{
					if (this._CatMunicipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMunicipioChanging(value);
					this.SendPropertyChanging();
					this._idMunicipio = value;
					this.SendPropertyChanged("idMunicipio");
					this.OnidMunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMunicipio_CatColonia", Storage="_CatMunicipio", ThisKey="idMunicipio", OtherKey="id", IsForeignKey=true)]
		public CatMunicipio CatMunicipio
		{
			get
			{
				return this._CatMunicipio.Entity;
			}
			set
			{
				CatMunicipio previousValue = this._CatMunicipio.Entity;
				if (((previousValue != value) 
							|| (this._CatMunicipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatMunicipio.Entity = null;
						previousValue.CatColonias.Remove(this);
					}
					this._CatMunicipio.Entity = value;
					if ((value != null))
					{
						value.CatColonias.Add(this);
						this._idMunicipio = value.id;
					}
					else
					{
						this._idMunicipio = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatMunicipio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatDocumentoCertifica")]
	public partial class CatDocumentoCertifica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblDocumentoEstudio> _TblDocumentoEstudios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatDocumentoCertifica()
		{
			this._TblDocumentoEstudios = new EntitySet<TblDocumentoEstudio>(new Action<TblDocumentoEstudio>(this.attach_TblDocumentoEstudios), new Action<TblDocumentoEstudio>(this.detach_TblDocumentoEstudios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(150)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatDocumentoCertifica_TblDocumentoEstudio", Storage="_TblDocumentoEstudios", ThisKey="id", OtherKey="idDocumentos")]
		public EntitySet<TblDocumentoEstudio> TblDocumentoEstudios
		{
			get
			{
				return this._TblDocumentoEstudios;
			}
			set
			{
				this._TblDocumentoEstudios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblDocumentoEstudios(TblDocumentoEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatDocumentoCertifica = this;
		}
		
		private void detach_TblDocumentoEstudios(TblDocumentoEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatDocumentoCertifica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEmpleado")]
	public partial class CatEmpleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApaterno;
		
		private string _strAmaterno;
		
		private System.DateTime _dteFechaNaci;
		
		private int _intEdad;
		
		private string _strSexo;
		
		private System.Nullable<decimal> _dceEstatura;
		
		private System.Nullable<decimal> _dcePeso;
		
		private string _strAlergia;
		
		private string _strRfc;
		
		private string _strCurp;
		
		private string _strNss;
		
		private string _strEstadoCivil;
		
		private string _strcorreo;
		
		private System.Nullable<int> _idTipoSangre;
		
		private System.Nullable<int> _idNacionalidad;
		
		private EntitySet<TblContactoAccidente> _TblContactoAccidentes;
		
		private EntitySet<TblDatosContacto> _TblDatosContactos;
		
		private EntitySet<TblDatosLaborale> _TblDatosLaborales;
		
		private EntitySet<TblDireccion> _TblDireccions;
		
		private EntitySet<TblFamiliar> _TblFamiliars;
		
		private EntitySet<TblPerfilEstudio> _TblPerfilEstudios;
		
		private EntitySet<TblTarjetaBancaria> _TblTarjetaBancarias;
		
		private EntityRef<CatTipoSangre> _CatTipoSangre;
		
		private EntityRef<CatNacionalidad> _CatNacionalidad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApaternoChanging(string value);
    partial void OnstrApaternoChanged();
    partial void OnstrAmaternoChanging(string value);
    partial void OnstrAmaternoChanged();
    partial void OndteFechaNaciChanging(System.DateTime value);
    partial void OndteFechaNaciChanged();
    partial void OnintEdadChanging(int value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OndceEstaturaChanging(System.Nullable<decimal> value);
    partial void OndceEstaturaChanged();
    partial void OndcePesoChanging(System.Nullable<decimal> value);
    partial void OndcePesoChanged();
    partial void OnstrAlergiaChanging(string value);
    partial void OnstrAlergiaChanged();
    partial void OnstrRfcChanging(string value);
    partial void OnstrRfcChanged();
    partial void OnstrCurpChanging(string value);
    partial void OnstrCurpChanged();
    partial void OnstrNssChanging(string value);
    partial void OnstrNssChanged();
    partial void OnstrEstadoCivilChanging(string value);
    partial void OnstrEstadoCivilChanged();
    partial void OnstrcorreoChanging(string value);
    partial void OnstrcorreoChanged();
    partial void OnidTipoSangreChanging(System.Nullable<int> value);
    partial void OnidTipoSangreChanged();
    partial void OnidNacionalidadChanging(System.Nullable<int> value);
    partial void OnidNacionalidadChanged();
    #endregion
		
		public CatEmpleado()
		{
			this._TblContactoAccidentes = new EntitySet<TblContactoAccidente>(new Action<TblContactoAccidente>(this.attach_TblContactoAccidentes), new Action<TblContactoAccidente>(this.detach_TblContactoAccidentes));
			this._TblDatosContactos = new EntitySet<TblDatosContacto>(new Action<TblDatosContacto>(this.attach_TblDatosContactos), new Action<TblDatosContacto>(this.detach_TblDatosContactos));
			this._TblDatosLaborales = new EntitySet<TblDatosLaborale>(new Action<TblDatosLaborale>(this.attach_TblDatosLaborales), new Action<TblDatosLaborale>(this.detach_TblDatosLaborales));
			this._TblDireccions = new EntitySet<TblDireccion>(new Action<TblDireccion>(this.attach_TblDireccions), new Action<TblDireccion>(this.detach_TblDireccions));
			this._TblFamiliars = new EntitySet<TblFamiliar>(new Action<TblFamiliar>(this.attach_TblFamiliars), new Action<TblFamiliar>(this.detach_TblFamiliars));
			this._TblPerfilEstudios = new EntitySet<TblPerfilEstudio>(new Action<TblPerfilEstudio>(this.attach_TblPerfilEstudios), new Action<TblPerfilEstudio>(this.detach_TblPerfilEstudios));
			this._TblTarjetaBancarias = new EntitySet<TblTarjetaBancaria>(new Action<TblTarjetaBancaria>(this.attach_TblTarjetaBancarias), new Action<TblTarjetaBancaria>(this.detach_TblTarjetaBancarias));
			this._CatTipoSangre = default(EntityRef<CatTipoSangre>);
			this._CatNacionalidad = default(EntityRef<CatNacionalidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strApaterno
		{
			get
			{
				return this._strApaterno;
			}
			set
			{
				if ((this._strApaterno != value))
				{
					this.OnstrApaternoChanging(value);
					this.SendPropertyChanging();
					this._strApaterno = value;
					this.SendPropertyChanged("strApaterno");
					this.OnstrApaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAmaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string strAmaterno
		{
			get
			{
				return this._strAmaterno;
			}
			set
			{
				if ((this._strAmaterno != value))
				{
					this.OnstrAmaternoChanging(value);
					this.SendPropertyChanging();
					this._strAmaterno = value;
					this.SendPropertyChanged("strAmaterno");
					this.OnstrAmaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaNaci", DbType="Date NOT NULL")]
		public System.DateTime dteFechaNaci
		{
			get
			{
				return this._dteFechaNaci;
			}
			set
			{
				if ((this._dteFechaNaci != value))
				{
					this.OndteFechaNaciChanging(value);
					this.SendPropertyChanging();
					this._dteFechaNaci = value;
					this.SendPropertyChanged("dteFechaNaci");
					this.OndteFechaNaciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int NOT NULL")]
		public int intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceEstatura", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceEstatura
		{
			get
			{
				return this._dceEstatura;
			}
			set
			{
				if ((this._dceEstatura != value))
				{
					this.OndceEstaturaChanging(value);
					this.SendPropertyChanging();
					this._dceEstatura = value;
					this.SendPropertyChanged("dceEstatura");
					this.OndceEstaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dcePeso", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dcePeso
		{
			get
			{
				return this._dcePeso;
			}
			set
			{
				if ((this._dcePeso != value))
				{
					this.OndcePesoChanging(value);
					this.SendPropertyChanging();
					this._dcePeso = value;
					this.SendPropertyChanged("dcePeso");
					this.OndcePesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAlergia", DbType="VarChar(350)")]
		public string strAlergia
		{
			get
			{
				return this._strAlergia;
			}
			set
			{
				if ((this._strAlergia != value))
				{
					this.OnstrAlergiaChanging(value);
					this.SendPropertyChanging();
					this._strAlergia = value;
					this.SendPropertyChanged("strAlergia");
					this.OnstrAlergiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRfc", DbType="VarChar(14)")]
		public string strRfc
		{
			get
			{
				return this._strRfc;
			}
			set
			{
				if ((this._strRfc != value))
				{
					this.OnstrRfcChanging(value);
					this.SendPropertyChanging();
					this._strRfc = value;
					this.SendPropertyChanged("strRfc");
					this.OnstrRfcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCurp", DbType="VarChar(20)")]
		public string strCurp
		{
			get
			{
				return this._strCurp;
			}
			set
			{
				if ((this._strCurp != value))
				{
					this.OnstrCurpChanging(value);
					this.SendPropertyChanging();
					this._strCurp = value;
					this.SendPropertyChanged("strCurp");
					this.OnstrCurpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNss", DbType="VarChar(13)")]
		public string strNss
		{
			get
			{
				return this._strNss;
			}
			set
			{
				if ((this._strNss != value))
				{
					this.OnstrNssChanging(value);
					this.SendPropertyChanging();
					this._strNss = value;
					this.SendPropertyChanged("strNss");
					this.OnstrNssChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEstadoCivil", DbType="VarChar(15)")]
		public string strEstadoCivil
		{
			get
			{
				return this._strEstadoCivil;
			}
			set
			{
				if ((this._strEstadoCivil != value))
				{
					this.OnstrEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._strEstadoCivil = value;
					this.SendPropertyChanged("strEstadoCivil");
					this.OnstrEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcorreo", DbType="VarChar(50)")]
		public string strcorreo
		{
			get
			{
				return this._strcorreo;
			}
			set
			{
				if ((this._strcorreo != value))
				{
					this.OnstrcorreoChanging(value);
					this.SendPropertyChanging();
					this._strcorreo = value;
					this.SendPropertyChanged("strcorreo");
					this.OnstrcorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoSangre", DbType="Int")]
		public System.Nullable<int> idTipoSangre
		{
			get
			{
				return this._idTipoSangre;
			}
			set
			{
				if ((this._idTipoSangre != value))
				{
					if (this._CatTipoSangre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoSangreChanging(value);
					this.SendPropertyChanging();
					this._idTipoSangre = value;
					this.SendPropertyChanged("idTipoSangre");
					this.OnidTipoSangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNacionalidad", DbType="Int")]
		public System.Nullable<int> idNacionalidad
		{
			get
			{
				return this._idNacionalidad;
			}
			set
			{
				if ((this._idNacionalidad != value))
				{
					if (this._CatNacionalidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNacionalidadChanging(value);
					this.SendPropertyChanging();
					this._idNacionalidad = value;
					this.SendPropertyChanged("idNacionalidad");
					this.OnidNacionalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblContactoAccidente", Storage="_TblContactoAccidentes", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblContactoAccidente> TblContactoAccidentes
		{
			get
			{
				return this._TblContactoAccidentes;
			}
			set
			{
				this._TblContactoAccidentes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDatosContacto", Storage="_TblDatosContactos", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblDatosContacto> TblDatosContactos
		{
			get
			{
				return this._TblDatosContactos;
			}
			set
			{
				this._TblDatosContactos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDatosLaborale", Storage="_TblDatosLaborales", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblDatosLaborale> TblDatosLaborales
		{
			get
			{
				return this._TblDatosLaborales;
			}
			set
			{
				this._TblDatosLaborales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDireccion", Storage="_TblDireccions", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblDireccion> TblDireccions
		{
			get
			{
				return this._TblDireccions;
			}
			set
			{
				this._TblDireccions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblFamiliar", Storage="_TblFamiliars", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblFamiliar> TblFamiliars
		{
			get
			{
				return this._TblFamiliars;
			}
			set
			{
				this._TblFamiliars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblPerfilEstudio", Storage="_TblPerfilEstudios", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblPerfilEstudio> TblPerfilEstudios
		{
			get
			{
				return this._TblPerfilEstudios;
			}
			set
			{
				this._TblPerfilEstudios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblTarjetaBancaria", Storage="_TblTarjetaBancarias", ThisKey="id", OtherKey="idEmpleado")]
		public EntitySet<TblTarjetaBancaria> TblTarjetaBancarias
		{
			get
			{
				return this._TblTarjetaBancarias;
			}
			set
			{
				this._TblTarjetaBancarias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoSangre_CatEmpleado", Storage="_CatTipoSangre", ThisKey="idTipoSangre", OtherKey="id", IsForeignKey=true)]
		public CatTipoSangre CatTipoSangre
		{
			get
			{
				return this._CatTipoSangre.Entity;
			}
			set
			{
				CatTipoSangre previousValue = this._CatTipoSangre.Entity;
				if (((previousValue != value) 
							|| (this._CatTipoSangre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatTipoSangre.Entity = null;
						previousValue.CatEmpleados.Remove(this);
					}
					this._CatTipoSangre.Entity = value;
					if ((value != null))
					{
						value.CatEmpleados.Add(this);
						this._idTipoSangre = value.id;
					}
					else
					{
						this._idTipoSangre = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatTipoSangre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatNacionalidad_CatEmpleado", Storage="_CatNacionalidad", ThisKey="idNacionalidad", OtherKey="id", IsForeignKey=true)]
		public CatNacionalidad CatNacionalidad
		{
			get
			{
				return this._CatNacionalidad.Entity;
			}
			set
			{
				CatNacionalidad previousValue = this._CatNacionalidad.Entity;
				if (((previousValue != value) 
							|| (this._CatNacionalidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatNacionalidad.Entity = null;
						previousValue.CatEmpleados.Remove(this);
					}
					this._CatNacionalidad.Entity = value;
					if ((value != null))
					{
						value.CatEmpleados.Add(this);
						this._idNacionalidad = value.id;
					}
					else
					{
						this._idNacionalidad = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatNacionalidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblContactoAccidentes(TblContactoAccidente entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblContactoAccidentes(TblContactoAccidente entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblDatosContactos(TblDatosContacto entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblDatosContactos(TblDatosContacto entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblDatosLaborales(TblDatosLaborale entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblDatosLaborales(TblDatosLaborale entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblDireccions(TblDireccion entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblDireccions(TblDireccion entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblFamiliars(TblFamiliar entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblFamiliars(TblFamiliar entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblPerfilEstudios(TblPerfilEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblPerfilEstudios(TblPerfilEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
		
		private void attach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = this;
		}
		
		private void detach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEstado")]
	public partial class CatEstado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private System.Nullable<int> _idPais;
		
		private EntitySet<CatMunicipio> _CatMunicipios;
		
		private EntityRef<CatPai> _CatPai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnidPaisChanging(System.Nullable<int> value);
    partial void OnidPaisChanged();
    #endregion
		
		public CatEstado()
		{
			this._CatMunicipios = new EntitySet<CatMunicipio>(new Action<CatMunicipio>(this.attach_CatMunicipios), new Action<CatMunicipio>(this.detach_CatMunicipios));
			this._CatPai = default(EntityRef<CatPai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPais", DbType="Int")]
		public System.Nullable<int> idPais
		{
			get
			{
				return this._idPais;
			}
			set
			{
				if ((this._idPais != value))
				{
					if (this._CatPai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPaisChanging(value);
					this.SendPropertyChanging();
					this._idPais = value;
					this.SendPropertyChanged("idPais");
					this.OnidPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstado_CatMunicipio", Storage="_CatMunicipios", ThisKey="id", OtherKey="idEstado")]
		public EntitySet<CatMunicipio> CatMunicipios
		{
			get
			{
				return this._CatMunicipios;
			}
			set
			{
				this._CatMunicipios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatPai_CatEstado", Storage="_CatPai", ThisKey="idPais", OtherKey="id", IsForeignKey=true)]
		public CatPai CatPai
		{
			get
			{
				return this._CatPai.Entity;
			}
			set
			{
				CatPai previousValue = this._CatPai.Entity;
				if (((previousValue != value) 
							|| (this._CatPai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatPai.Entity = null;
						previousValue.CatEstados.Remove(this);
					}
					this._CatPai.Entity = value;
					if ((value != null))
					{
						value.CatEstados.Add(this);
						this._idPais = value.id;
					}
					else
					{
						this._idPais = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatPai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatMunicipios(CatMunicipio entity)
		{
			this.SendPropertyChanging();
			entity.CatEstado = this;
		}
		
		private void detach_CatMunicipios(CatMunicipio entity)
		{
			this.SendPropertyChanging();
			entity.CatEstado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatMarcaVehiculo")]
	public partial class CatMarcaVehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<CatModeloVehiculo> _CatModeloVehiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatMarcaVehiculo()
		{
			this._CatModeloVehiculos = new EntitySet<CatModeloVehiculo>(new Action<CatModeloVehiculo>(this.attach_CatModeloVehiculos), new Action<CatModeloVehiculo>(this.detach_CatModeloVehiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(250)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMarcaVehiculo_CatModeloVehiculo", Storage="_CatModeloVehiculos", ThisKey="id", OtherKey="idMarca")]
		public EntitySet<CatModeloVehiculo> CatModeloVehiculos
		{
			get
			{
				return this._CatModeloVehiculos;
			}
			set
			{
				this._CatModeloVehiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatModeloVehiculos(CatModeloVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatMarcaVehiculo = this;
		}
		
		private void detach_CatModeloVehiculos(CatModeloVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatMarcaVehiculo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatModeloVehiculo")]
	public partial class CatModeloVehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private System.Nullable<int> _idMarca;
		
		private EntitySet<TblVehiculo> _TblVehiculos;
		
		private EntityRef<CatMarcaVehiculo> _CatMarcaVehiculo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnidMarcaChanging(System.Nullable<int> value);
    partial void OnidMarcaChanged();
    #endregion
		
		public CatModeloVehiculo()
		{
			this._TblVehiculos = new EntitySet<TblVehiculo>(new Action<TblVehiculo>(this.attach_TblVehiculos), new Action<TblVehiculo>(this.detach_TblVehiculos));
			this._CatMarcaVehiculo = default(EntityRef<CatMarcaVehiculo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", DbType="Int")]
		public System.Nullable<int> idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					if (this._CatMarcaVehiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatModeloVehiculo_TblVehiculo", Storage="_TblVehiculos", ThisKey="id", OtherKey="idModelo")]
		public EntitySet<TblVehiculo> TblVehiculos
		{
			get
			{
				return this._TblVehiculos;
			}
			set
			{
				this._TblVehiculos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMarcaVehiculo_CatModeloVehiculo", Storage="_CatMarcaVehiculo", ThisKey="idMarca", OtherKey="id", IsForeignKey=true)]
		public CatMarcaVehiculo CatMarcaVehiculo
		{
			get
			{
				return this._CatMarcaVehiculo.Entity;
			}
			set
			{
				CatMarcaVehiculo previousValue = this._CatMarcaVehiculo.Entity;
				if (((previousValue != value) 
							|| (this._CatMarcaVehiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatMarcaVehiculo.Entity = null;
						previousValue.CatModeloVehiculos.Remove(this);
					}
					this._CatMarcaVehiculo.Entity = value;
					if ((value != null))
					{
						value.CatModeloVehiculos.Add(this);
						this._idMarca = value.id;
					}
					else
					{
						this._idMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatMarcaVehiculo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblVehiculos(TblVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatModeloVehiculo = this;
		}
		
		private void detach_TblVehiculos(TblVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatModeloVehiculo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatMovimientos")]
	public partial class CatMovimiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblTarjetaBancaria> _TblTarjetaBancarias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatMovimiento()
		{
			this._TblTarjetaBancarias = new EntitySet<TblTarjetaBancaria>(new Action<TblTarjetaBancaria>(this.attach_TblTarjetaBancarias), new Action<TblTarjetaBancaria>(this.detach_TblTarjetaBancarias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(200)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMovimiento_TblTarjetaBancaria", Storage="_TblTarjetaBancarias", ThisKey="id", OtherKey="idMovimiento")]
		public EntitySet<TblTarjetaBancaria> TblTarjetaBancarias
		{
			get
			{
				return this._TblTarjetaBancarias;
			}
			set
			{
				this._TblTarjetaBancarias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatMovimiento = this;
		}
		
		private void detach_TblTarjetaBancarias(TblTarjetaBancaria entity)
		{
			this.SendPropertyChanging();
			entity.CatMovimiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatMunicipio")]
	public partial class CatMunicipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private System.Nullable<int> _idEstado;
		
		private EntitySet<CatColonia> _CatColonias;
		
		private EntityRef<CatEstado> _CatEstado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnidEstadoChanging(System.Nullable<int> value);
    partial void OnidEstadoChanged();
    #endregion
		
		public CatMunicipio()
		{
			this._CatColonias = new EntitySet<CatColonia>(new Action<CatColonia>(this.attach_CatColonias), new Action<CatColonia>(this.detach_CatColonias));
			this._CatEstado = default(EntityRef<CatEstado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int")]
		public System.Nullable<int> idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._CatEstado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMunicipio_CatColonia", Storage="_CatColonias", ThisKey="id", OtherKey="idMunicipio")]
		public EntitySet<CatColonia> CatColonias
		{
			get
			{
				return this._CatColonias;
			}
			set
			{
				this._CatColonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEstado_CatMunicipio", Storage="_CatEstado", ThisKey="idEstado", OtherKey="id", IsForeignKey=true)]
		public CatEstado CatEstado
		{
			get
			{
				return this._CatEstado.Entity;
			}
			set
			{
				CatEstado previousValue = this._CatEstado.Entity;
				if (((previousValue != value) 
							|| (this._CatEstado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEstado.Entity = null;
						previousValue.CatMunicipios.Remove(this);
					}
					this._CatEstado.Entity = value;
					if ((value != null))
					{
						value.CatMunicipios.Add(this);
						this._idEstado = value.id;
					}
					else
					{
						this._idEstado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEstado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatColonias(CatColonia entity)
		{
			this.SendPropertyChanging();
			entity.CatMunicipio = this;
		}
		
		private void detach_CatColonias(CatColonia entity)
		{
			this.SendPropertyChanging();
			entity.CatMunicipio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatNivelEscolar")]
	public partial class CatNivelEscolar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblPerfilEstudio> _TblPerfilEstudios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatNivelEscolar()
		{
			this._TblPerfilEstudios = new EntitySet<TblPerfilEstudio>(new Action<TblPerfilEstudio>(this.attach_TblPerfilEstudios), new Action<TblPerfilEstudio>(this.detach_TblPerfilEstudios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatNivelEscolar_TblPerfilEstudio", Storage="_TblPerfilEstudios", ThisKey="id", OtherKey="idEscolaridad")]
		public EntitySet<TblPerfilEstudio> TblPerfilEstudios
		{
			get
			{
				return this._TblPerfilEstudios;
			}
			set
			{
				this._TblPerfilEstudios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblPerfilEstudios(TblPerfilEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatNivelEscolar = this;
		}
		
		private void detach_TblPerfilEstudios(TblPerfilEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatNivelEscolar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatPais")]
	public partial class CatPai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<CatEstado> _CatEstados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatPai()
		{
			this._CatEstados = new EntitySet<CatEstado>(new Action<CatEstado>(this.attach_CatEstados), new Action<CatEstado>(this.detach_CatEstados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatPai_CatEstado", Storage="_CatEstados", ThisKey="id", OtherKey="idPais")]
		public EntitySet<CatEstado> CatEstados
		{
			get
			{
				return this._CatEstados;
			}
			set
			{
				this._CatEstados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatEstados(CatEstado entity)
		{
			this.SendPropertyChanging();
			entity.CatPai = this;
		}
		
		private void detach_CatEstados(CatEstado entity)
		{
			this.SendPropertyChanging();
			entity.CatPai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatParentesco")]
	public partial class CatParentesco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<TblContactoAccidente> _TblContactoAccidentes;
		
		private EntitySet<TblFamiliar> _TblFamiliars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatParentesco()
		{
			this._TblContactoAccidentes = new EntitySet<TblContactoAccidente>(new Action<TblContactoAccidente>(this.attach_TblContactoAccidentes), new Action<TblContactoAccidente>(this.detach_TblContactoAccidentes));
			this._TblFamiliars = new EntitySet<TblFamiliar>(new Action<TblFamiliar>(this.attach_TblFamiliars), new Action<TblFamiliar>(this.detach_TblFamiliars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatParentesco_TblContactoAccidente", Storage="_TblContactoAccidentes", ThisKey="id", OtherKey="idParentesco")]
		public EntitySet<TblContactoAccidente> TblContactoAccidentes
		{
			get
			{
				return this._TblContactoAccidentes;
			}
			set
			{
				this._TblContactoAccidentes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatParentesco_TblFamiliar", Storage="_TblFamiliars", ThisKey="id", OtherKey="idParentesco")]
		public EntitySet<TblFamiliar> TblFamiliars
		{
			get
			{
				return this._TblFamiliars;
			}
			set
			{
				this._TblFamiliars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblContactoAccidentes(TblContactoAccidente entity)
		{
			this.SendPropertyChanging();
			entity.CatParentesco = this;
		}
		
		private void detach_TblContactoAccidentes(TblContactoAccidente entity)
		{
			this.SendPropertyChanging();
			entity.CatParentesco = null;
		}
		
		private void attach_TblFamiliars(TblFamiliar entity)
		{
			this.SendPropertyChanging();
			entity.CatParentesco = this;
		}
		
		private void detach_TblFamiliars(TblFamiliar entity)
		{
			this.SendPropertyChanging();
			entity.CatParentesco = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatProfesion")]
	public partial class CatProfesion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblEstudio> _TblEstudios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatProfesion()
		{
			this._TblEstudios = new EntitySet<TblEstudio>(new Action<TblEstudio>(this.attach_TblEstudios), new Action<TblEstudio>(this.detach_TblEstudios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(200)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(250)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatProfesion_TblEstudio", Storage="_TblEstudios", ThisKey="id", OtherKey="idProfesion")]
		public EntitySet<TblEstudio> TblEstudios
		{
			get
			{
				return this._TblEstudios;
			}
			set
			{
				this._TblEstudios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatProfesion = this;
		}
		
		private void detach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatProfesion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatStatusEscolar")]
	public partial class CatStatusEscolar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<TblEstudio> _TblEstudios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public CatStatusEscolar()
		{
			this._TblEstudios = new EntitySet<TblEstudio>(new Action<TblEstudio>(this.attach_TblEstudios), new Action<TblEstudio>(this.detach_TblEstudios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(100)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatStatusEscolar_TblEstudio", Storage="_TblEstudios", ThisKey="id", OtherKey="idEstatus")]
		public EntitySet<TblEstudio> TblEstudios
		{
			get
			{
				return this._TblEstudios;
			}
			set
			{
				this._TblEstudios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatStatusEscolar = this;
		}
		
		private void detach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.CatStatusEscolar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatTipoSangre")]
	public partial class CatTipoSangre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<CatEmpleado> _CatEmpleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatTipoSangre()
		{
			this._CatEmpleados = new EntitySet<CatEmpleado>(new Action<CatEmpleado>(this.attach_CatEmpleados), new Action<CatEmpleado>(this.detach_CatEmpleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(20)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoSangre_CatEmpleado", Storage="_CatEmpleados", ThisKey="id", OtherKey="idTipoSangre")]
		public EntitySet<CatEmpleado> CatEmpleados
		{
			get
			{
				return this._CatEmpleados;
			}
			set
			{
				this._CatEmpleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatEmpleados(CatEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoSangre = this;
		}
		
		private void detach_CatEmpleados(CatEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoSangre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatTipoTelefono")]
	public partial class CatTipoTelefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<TblDatosContacto> _TblDatosContactos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatTipoTelefono()
		{
			this._TblDatosContactos = new EntitySet<TblDatosContacto>(new Action<TblDatosContacto>(this.attach_TblDatosContactos), new Action<TblDatosContacto>(this.detach_TblDatosContactos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(20)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoTelefono_TblDatosContacto", Storage="_TblDatosContactos", ThisKey="id", OtherKey="idTipoTelefono")]
		public EntitySet<TblDatosContacto> TblDatosContactos
		{
			get
			{
				return this._TblDatosContactos;
			}
			set
			{
				this._TblDatosContactos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblDatosContactos(TblDatosContacto entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoTelefono = this;
		}
		
		private void detach_TblDatosContactos(TblDatosContacto entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoTelefono = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatTipoVehiculo")]
	public partial class CatTipoVehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<TblVehiculo> _TblVehiculos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatTipoVehiculo()
		{
			this._TblVehiculos = new EntitySet<TblVehiculo>(new Action<TblVehiculo>(this.attach_TblVehiculos), new Action<TblVehiculo>(this.detach_TblVehiculos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoVehiculo_TblVehiculo", Storage="_TblVehiculos", ThisKey="id", OtherKey="idTipoVehiculo")]
		public EntitySet<TblVehiculo> TblVehiculos
		{
			get
			{
				return this._TblVehiculos;
			}
			set
			{
				this._TblVehiculos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblVehiculos(TblVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoVehiculo = this;
		}
		
		private void detach_TblVehiculos(TblVehiculo entity)
		{
			this.SendPropertyChanging();
			entity.CatTipoVehiculo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblContactoAccidente")]
	public partial class TblContactoAccidente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApaterno;
		
		private string _strAmaterno;
		
		private string _strTelefono;
		
		private System.Nullable<int> _idParentesco;
		
		private System.Nullable<int> _idEmpleado;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
		private EntityRef<CatParentesco> _CatParentesco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApaternoChanging(string value);
    partial void OnstrApaternoChanged();
    partial void OnstrAmaternoChanging(string value);
    partial void OnstrAmaternoChanged();
    partial void OnstrTelefonoChanging(string value);
    partial void OnstrTelefonoChanged();
    partial void OnidParentescoChanging(System.Nullable<int> value);
    partial void OnidParentescoChanged();
    partial void OnidEmpleadoChanging(System.Nullable<int> value);
    partial void OnidEmpleadoChanged();
    #endregion
		
		public TblContactoAccidente()
		{
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			this._CatParentesco = default(EntityRef<CatParentesco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(100)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApaterno", DbType="VarChar(50)")]
		public string strApaterno
		{
			get
			{
				return this._strApaterno;
			}
			set
			{
				if ((this._strApaterno != value))
				{
					this.OnstrApaternoChanging(value);
					this.SendPropertyChanging();
					this._strApaterno = value;
					this.SendPropertyChanged("strApaterno");
					this.OnstrApaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAmaterno", DbType="VarChar(50)")]
		public string strAmaterno
		{
			get
			{
				return this._strAmaterno;
			}
			set
			{
				if ((this._strAmaterno != value))
				{
					this.OnstrAmaternoChanging(value);
					this.SendPropertyChanging();
					this._strAmaterno = value;
					this.SendPropertyChanged("strAmaterno");
					this.OnstrAmaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTelefono", DbType="VarChar(12)")]
		public string strTelefono
		{
			get
			{
				return this._strTelefono;
			}
			set
			{
				if ((this._strTelefono != value))
				{
					this.OnstrTelefonoChanging(value);
					this.SendPropertyChanging();
					this._strTelefono = value;
					this.SendPropertyChanged("strTelefono");
					this.OnstrTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idParentesco", DbType="Int")]
		public System.Nullable<int> idParentesco
		{
			get
			{
				return this._idParentesco;
			}
			set
			{
				if ((this._idParentesco != value))
				{
					if (this._CatParentesco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidParentescoChanging(value);
					this.SendPropertyChanging();
					this._idParentesco = value;
					this.SendPropertyChanged("idParentesco");
					this.OnidParentescoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int")]
		public System.Nullable<int> idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblContactoAccidente", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblContactoAccidentes.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblContactoAccidentes.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatParentesco_TblContactoAccidente", Storage="_CatParentesco", ThisKey="idParentesco", OtherKey="id", IsForeignKey=true)]
		public CatParentesco CatParentesco
		{
			get
			{
				return this._CatParentesco.Entity;
			}
			set
			{
				CatParentesco previousValue = this._CatParentesco.Entity;
				if (((previousValue != value) 
							|| (this._CatParentesco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatParentesco.Entity = null;
						previousValue.TblContactoAccidentes.Remove(this);
					}
					this._CatParentesco.Entity = value;
					if ((value != null))
					{
						value.TblContactoAccidentes.Add(this);
						this._idParentesco = value.id;
					}
					else
					{
						this._idParentesco = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatParentesco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDatosContacto")]
	public partial class TblDatosContacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idEmpleado;
		
		private System.Nullable<int> _idTipoTelefono;
		
		private string _strNumero;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
		private EntityRef<CatTipoTelefono> _CatTipoTelefono;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidEmpleadoChanging(System.Nullable<int> value);
    partial void OnidEmpleadoChanged();
    partial void OnidTipoTelefonoChanging(System.Nullable<int> value);
    partial void OnidTipoTelefonoChanged();
    partial void OnstrNumeroChanging(string value);
    partial void OnstrNumeroChanged();
    #endregion
		
		public TblDatosContacto()
		{
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			this._CatTipoTelefono = default(EntityRef<CatTipoTelefono>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int")]
		public System.Nullable<int> idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoTelefono", DbType="Int")]
		public System.Nullable<int> idTipoTelefono
		{
			get
			{
				return this._idTipoTelefono;
			}
			set
			{
				if ((this._idTipoTelefono != value))
				{
					if (this._CatTipoTelefono.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTipoTelefono = value;
					this.SendPropertyChanged("idTipoTelefono");
					this.OnidTipoTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNumero", DbType="VarChar(15)")]
		public string strNumero
		{
			get
			{
				return this._strNumero;
			}
			set
			{
				if ((this._strNumero != value))
				{
					this.OnstrNumeroChanging(value);
					this.SendPropertyChanging();
					this._strNumero = value;
					this.SendPropertyChanged("strNumero");
					this.OnstrNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDatosContacto", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblDatosContactos.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblDatosContactos.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoTelefono_TblDatosContacto", Storage="_CatTipoTelefono", ThisKey="idTipoTelefono", OtherKey="id", IsForeignKey=true)]
		public CatTipoTelefono CatTipoTelefono
		{
			get
			{
				return this._CatTipoTelefono.Entity;
			}
			set
			{
				CatTipoTelefono previousValue = this._CatTipoTelefono.Entity;
				if (((previousValue != value) 
							|| (this._CatTipoTelefono.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatTipoTelefono.Entity = null;
						previousValue.TblDatosContactos.Remove(this);
					}
					this._CatTipoTelefono.Entity = value;
					if ((value != null))
					{
						value.TblDatosContactos.Add(this);
						this._idTipoTelefono = value.id;
					}
					else
					{
						this._idTipoTelefono = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatTipoTelefono");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDatosLaborales")]
	public partial class TblDatosLaborale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strPuesto;
		
		private string _strEmpresa;
		
		private string _strDepartamento;
		
		private System.Nullable<System.DateTime> _dteFechaEntrada;
		
		private System.Nullable<decimal> _dceSueldoInicial;
		
		private string _strTelefono;
		
		private string _strDireccion;
		
		private string _strJefeInmediato;
		
		private System.Nullable<decimal> _dceSueldoFinal;
		
		private System.Nullable<System.DateTime> _dteFechaSalida;
		
		private string _strMotivoSalida;
		
		private string _strHerramientas;
		
		private System.Nullable<int> _idEmpleado;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrPuestoChanging(string value);
    partial void OnstrPuestoChanged();
    partial void OnstrEmpresaChanging(string value);
    partial void OnstrEmpresaChanged();
    partial void OnstrDepartamentoChanging(string value);
    partial void OnstrDepartamentoChanged();
    partial void OndteFechaEntradaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaEntradaChanged();
    partial void OndceSueldoInicialChanging(System.Nullable<decimal> value);
    partial void OndceSueldoInicialChanged();
    partial void OnstrTelefonoChanging(string value);
    partial void OnstrTelefonoChanged();
    partial void OnstrDireccionChanging(string value);
    partial void OnstrDireccionChanged();
    partial void OnstrJefeInmediatoChanging(string value);
    partial void OnstrJefeInmediatoChanged();
    partial void OndceSueldoFinalChanging(System.Nullable<decimal> value);
    partial void OndceSueldoFinalChanged();
    partial void OndteFechaSalidaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaSalidaChanged();
    partial void OnstrMotivoSalidaChanging(string value);
    partial void OnstrMotivoSalidaChanged();
    partial void OnstrHerramientasChanging(string value);
    partial void OnstrHerramientasChanged();
    partial void OnidEmpleadoChanging(System.Nullable<int> value);
    partial void OnidEmpleadoChanged();
    #endregion
		
		public TblDatosLaborale()
		{
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPuesto", DbType="VarChar(100)")]
		public string strPuesto
		{
			get
			{
				return this._strPuesto;
			}
			set
			{
				if ((this._strPuesto != value))
				{
					this.OnstrPuestoChanging(value);
					this.SendPropertyChanging();
					this._strPuesto = value;
					this.SendPropertyChanged("strPuesto");
					this.OnstrPuestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmpresa", DbType="VarChar(100)")]
		public string strEmpresa
		{
			get
			{
				return this._strEmpresa;
			}
			set
			{
				if ((this._strEmpresa != value))
				{
					this.OnstrEmpresaChanging(value);
					this.SendPropertyChanging();
					this._strEmpresa = value;
					this.SendPropertyChanged("strEmpresa");
					this.OnstrEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDepartamento", DbType="VarChar(100)")]
		public string strDepartamento
		{
			get
			{
				return this._strDepartamento;
			}
			set
			{
				if ((this._strDepartamento != value))
				{
					this.OnstrDepartamentoChanging(value);
					this.SendPropertyChanging();
					this._strDepartamento = value;
					this.SendPropertyChanged("strDepartamento");
					this.OnstrDepartamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaEntrada", DbType="Date")]
		public System.Nullable<System.DateTime> dteFechaEntrada
		{
			get
			{
				return this._dteFechaEntrada;
			}
			set
			{
				if ((this._dteFechaEntrada != value))
				{
					this.OndteFechaEntradaChanging(value);
					this.SendPropertyChanging();
					this._dteFechaEntrada = value;
					this.SendPropertyChanged("dteFechaEntrada");
					this.OndteFechaEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceSueldoInicial", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceSueldoInicial
		{
			get
			{
				return this._dceSueldoInicial;
			}
			set
			{
				if ((this._dceSueldoInicial != value))
				{
					this.OndceSueldoInicialChanging(value);
					this.SendPropertyChanging();
					this._dceSueldoInicial = value;
					this.SendPropertyChanged("dceSueldoInicial");
					this.OndceSueldoInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTelefono", DbType="VarChar(50)")]
		public string strTelefono
		{
			get
			{
				return this._strTelefono;
			}
			set
			{
				if ((this._strTelefono != value))
				{
					this.OnstrTelefonoChanging(value);
					this.SendPropertyChanging();
					this._strTelefono = value;
					this.SendPropertyChanged("strTelefono");
					this.OnstrTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDireccion", DbType="VarChar(100)")]
		public string strDireccion
		{
			get
			{
				return this._strDireccion;
			}
			set
			{
				if ((this._strDireccion != value))
				{
					this.OnstrDireccionChanging(value);
					this.SendPropertyChanging();
					this._strDireccion = value;
					this.SendPropertyChanged("strDireccion");
					this.OnstrDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strJefeInmediato", DbType="VarChar(100)")]
		public string strJefeInmediato
		{
			get
			{
				return this._strJefeInmediato;
			}
			set
			{
				if ((this._strJefeInmediato != value))
				{
					this.OnstrJefeInmediatoChanging(value);
					this.SendPropertyChanging();
					this._strJefeInmediato = value;
					this.SendPropertyChanged("strJefeInmediato");
					this.OnstrJefeInmediatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceSueldoFinal", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceSueldoFinal
		{
			get
			{
				return this._dceSueldoFinal;
			}
			set
			{
				if ((this._dceSueldoFinal != value))
				{
					this.OndceSueldoFinalChanging(value);
					this.SendPropertyChanging();
					this._dceSueldoFinal = value;
					this.SendPropertyChanged("dceSueldoFinal");
					this.OndceSueldoFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaSalida", DbType="Date")]
		public System.Nullable<System.DateTime> dteFechaSalida
		{
			get
			{
				return this._dteFechaSalida;
			}
			set
			{
				if ((this._dteFechaSalida != value))
				{
					this.OndteFechaSalidaChanging(value);
					this.SendPropertyChanging();
					this._dteFechaSalida = value;
					this.SendPropertyChanged("dteFechaSalida");
					this.OndteFechaSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strMotivoSalida", DbType="VarChar(100)")]
		public string strMotivoSalida
		{
			get
			{
				return this._strMotivoSalida;
			}
			set
			{
				if ((this._strMotivoSalida != value))
				{
					this.OnstrMotivoSalidaChanging(value);
					this.SendPropertyChanging();
					this._strMotivoSalida = value;
					this.SendPropertyChanged("strMotivoSalida");
					this.OnstrMotivoSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strHerramientas", DbType="VarChar(200)")]
		public string strHerramientas
		{
			get
			{
				return this._strHerramientas;
			}
			set
			{
				if ((this._strHerramientas != value))
				{
					this.OnstrHerramientasChanging(value);
					this.SendPropertyChanging();
					this._strHerramientas = value;
					this.SendPropertyChanged("strHerramientas");
					this.OnstrHerramientasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int")]
		public System.Nullable<int> idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDatosLaborale", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblDatosLaborales.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblDatosLaborales.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDireccion")]
	public partial class TblDireccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strCalle;
		
		private System.Nullable<int> _intNumInterior;
		
		private System.Nullable<int> _intNumExterior;
		
		private string _referencias;
		
		private System.Nullable<int> _idEmpleado;
		
		private System.Nullable<int> _idCp;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrCalleChanging(string value);
    partial void OnstrCalleChanged();
    partial void OnintNumInteriorChanging(System.Nullable<int> value);
    partial void OnintNumInteriorChanged();
    partial void OnintNumExteriorChanging(System.Nullable<int> value);
    partial void OnintNumExteriorChanged();
    partial void OnreferenciasChanging(string value);
    partial void OnreferenciasChanged();
    partial void OnidEmpleadoChanging(System.Nullable<int> value);
    partial void OnidEmpleadoChanged();
    partial void OnidCpChanging(System.Nullable<int> value);
    partial void OnidCpChanged();
    #endregion
		
		public TblDireccion()
		{
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCalle", DbType="VarChar(100)")]
		public string strCalle
		{
			get
			{
				return this._strCalle;
			}
			set
			{
				if ((this._strCalle != value))
				{
					this.OnstrCalleChanging(value);
					this.SendPropertyChanging();
					this._strCalle = value;
					this.SendPropertyChanged("strCalle");
					this.OnstrCalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumInterior", DbType="Int")]
		public System.Nullable<int> intNumInterior
		{
			get
			{
				return this._intNumInterior;
			}
			set
			{
				if ((this._intNumInterior != value))
				{
					this.OnintNumInteriorChanging(value);
					this.SendPropertyChanging();
					this._intNumInterior = value;
					this.SendPropertyChanged("intNumInterior");
					this.OnintNumInteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumExterior", DbType="Int")]
		public System.Nullable<int> intNumExterior
		{
			get
			{
				return this._intNumExterior;
			}
			set
			{
				if ((this._intNumExterior != value))
				{
					this.OnintNumExteriorChanging(value);
					this.SendPropertyChanging();
					this._intNumExterior = value;
					this.SendPropertyChanged("intNumExterior");
					this.OnintNumExteriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referencias", DbType="VarChar(100)")]
		public string referencias
		{
			get
			{
				return this._referencias;
			}
			set
			{
				if ((this._referencias != value))
				{
					this.OnreferenciasChanging(value);
					this.SendPropertyChanging();
					this._referencias = value;
					this.SendPropertyChanged("referencias");
					this.OnreferenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int")]
		public System.Nullable<int> idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCp", DbType="Int")]
		public System.Nullable<int> idCp
		{
			get
			{
				return this._idCp;
			}
			set
			{
				if ((this._idCp != value))
				{
					this.OnidCpChanging(value);
					this.SendPropertyChanging();
					this._idCp = value;
					this.SendPropertyChanged("idCp");
					this.OnidCpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblDireccion", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblDireccions.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblDireccions.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDocumentoEstudio")]
	public partial class TblDocumentoEstudio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idEstudios;
		
		private System.Nullable<int> _idDocumentos;
		
		private EntityRef<CatDocumentoCertifica> _CatDocumentoCertifica;
		
		private EntityRef<TblEstudio> _TblEstudio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidEstudiosChanging(System.Nullable<int> value);
    partial void OnidEstudiosChanged();
    partial void OnidDocumentosChanging(System.Nullable<int> value);
    partial void OnidDocumentosChanged();
    #endregion
		
		public TblDocumentoEstudio()
		{
			this._CatDocumentoCertifica = default(EntityRef<CatDocumentoCertifica>);
			this._TblEstudio = default(EntityRef<TblEstudio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstudios", DbType="Int")]
		public System.Nullable<int> idEstudios
		{
			get
			{
				return this._idEstudios;
			}
			set
			{
				if ((this._idEstudios != value))
				{
					if (this._TblEstudio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstudiosChanging(value);
					this.SendPropertyChanging();
					this._idEstudios = value;
					this.SendPropertyChanged("idEstudios");
					this.OnidEstudiosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDocumentos", DbType="Int")]
		public System.Nullable<int> idDocumentos
		{
			get
			{
				return this._idDocumentos;
			}
			set
			{
				if ((this._idDocumentos != value))
				{
					if (this._CatDocumentoCertifica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDocumentosChanging(value);
					this.SendPropertyChanging();
					this._idDocumentos = value;
					this.SendPropertyChanged("idDocumentos");
					this.OnidDocumentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatDocumentoCertifica_TblDocumentoEstudio", Storage="_CatDocumentoCertifica", ThisKey="idDocumentos", OtherKey="id", IsForeignKey=true)]
		public CatDocumentoCertifica CatDocumentoCertifica
		{
			get
			{
				return this._CatDocumentoCertifica.Entity;
			}
			set
			{
				CatDocumentoCertifica previousValue = this._CatDocumentoCertifica.Entity;
				if (((previousValue != value) 
							|| (this._CatDocumentoCertifica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatDocumentoCertifica.Entity = null;
						previousValue.TblDocumentoEstudios.Remove(this);
					}
					this._CatDocumentoCertifica.Entity = value;
					if ((value != null))
					{
						value.TblDocumentoEstudios.Add(this);
						this._idDocumentos = value.id;
					}
					else
					{
						this._idDocumentos = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatDocumentoCertifica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblEstudio_TblDocumentoEstudio", Storage="_TblEstudio", ThisKey="idEstudios", OtherKey="id", IsForeignKey=true)]
		public TblEstudio TblEstudio
		{
			get
			{
				return this._TblEstudio.Entity;
			}
			set
			{
				TblEstudio previousValue = this._TblEstudio.Entity;
				if (((previousValue != value) 
							|| (this._TblEstudio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblEstudio.Entity = null;
						previousValue.TblDocumentoEstudios.Remove(this);
					}
					this._TblEstudio.Entity = value;
					if ((value != null))
					{
						value.TblDocumentoEstudios.Add(this);
						this._idEstudios = value.id;
					}
					else
					{
						this._idEstudios = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblEstudio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblEstudios")]
	public partial class TblEstudio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idPerfil;
		
		private System.Nullable<int> _idProfesion;
		
		private System.Nullable<int> _idEstatus;
		
		private string _institucion;
		
		private EntitySet<TblDocumentoEstudio> _TblDocumentoEstudios;
		
		private EntityRef<CatProfesion> _CatProfesion;
		
		private EntityRef<CatStatusEscolar> _CatStatusEscolar;
		
		private EntityRef<TblPerfilEstudio> _TblPerfilEstudio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidPerfilChanging(System.Nullable<int> value);
    partial void OnidPerfilChanged();
    partial void OnidProfesionChanging(System.Nullable<int> value);
    partial void OnidProfesionChanged();
    partial void OnidEstatusChanging(System.Nullable<int> value);
    partial void OnidEstatusChanged();
    partial void OninstitucionChanging(string value);
    partial void OninstitucionChanged();
    #endregion
		
		public TblEstudio()
		{
			this._TblDocumentoEstudios = new EntitySet<TblDocumentoEstudio>(new Action<TblDocumentoEstudio>(this.attach_TblDocumentoEstudios), new Action<TblDocumentoEstudio>(this.detach_TblDocumentoEstudios));
			this._CatProfesion = default(EntityRef<CatProfesion>);
			this._CatStatusEscolar = default(EntityRef<CatStatusEscolar>);
			this._TblPerfilEstudio = default(EntityRef<TblPerfilEstudio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPerfil", DbType="Int")]
		public System.Nullable<int> idPerfil
		{
			get
			{
				return this._idPerfil;
			}
			set
			{
				if ((this._idPerfil != value))
				{
					if (this._TblPerfilEstudio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPerfilChanging(value);
					this.SendPropertyChanging();
					this._idPerfil = value;
					this.SendPropertyChanged("idPerfil");
					this.OnidPerfilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProfesion", DbType="Int")]
		public System.Nullable<int> idProfesion
		{
			get
			{
				return this._idProfesion;
			}
			set
			{
				if ((this._idProfesion != value))
				{
					if (this._CatProfesion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProfesionChanging(value);
					this.SendPropertyChanging();
					this._idProfesion = value;
					this.SendPropertyChanged("idProfesion");
					this.OnidProfesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstatus", DbType="Int")]
		public System.Nullable<int> idEstatus
		{
			get
			{
				return this._idEstatus;
			}
			set
			{
				if ((this._idEstatus != value))
				{
					if (this._CatStatusEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstatusChanging(value);
					this.SendPropertyChanging();
					this._idEstatus = value;
					this.SendPropertyChanged("idEstatus");
					this.OnidEstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_institucion", DbType="VarChar(100)")]
		public string institucion
		{
			get
			{
				return this._institucion;
			}
			set
			{
				if ((this._institucion != value))
				{
					this.OninstitucionChanging(value);
					this.SendPropertyChanging();
					this._institucion = value;
					this.SendPropertyChanged("institucion");
					this.OninstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblEstudio_TblDocumentoEstudio", Storage="_TblDocumentoEstudios", ThisKey="id", OtherKey="idEstudios")]
		public EntitySet<TblDocumentoEstudio> TblDocumentoEstudios
		{
			get
			{
				return this._TblDocumentoEstudios;
			}
			set
			{
				this._TblDocumentoEstudios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatProfesion_TblEstudio", Storage="_CatProfesion", ThisKey="idProfesion", OtherKey="id", IsForeignKey=true)]
		public CatProfesion CatProfesion
		{
			get
			{
				return this._CatProfesion.Entity;
			}
			set
			{
				CatProfesion previousValue = this._CatProfesion.Entity;
				if (((previousValue != value) 
							|| (this._CatProfesion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatProfesion.Entity = null;
						previousValue.TblEstudios.Remove(this);
					}
					this._CatProfesion.Entity = value;
					if ((value != null))
					{
						value.TblEstudios.Add(this);
						this._idProfesion = value.id;
					}
					else
					{
						this._idProfesion = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatProfesion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatStatusEscolar_TblEstudio", Storage="_CatStatusEscolar", ThisKey="idEstatus", OtherKey="id", IsForeignKey=true)]
		public CatStatusEscolar CatStatusEscolar
		{
			get
			{
				return this._CatStatusEscolar.Entity;
			}
			set
			{
				CatStatusEscolar previousValue = this._CatStatusEscolar.Entity;
				if (((previousValue != value) 
							|| (this._CatStatusEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatStatusEscolar.Entity = null;
						previousValue.TblEstudios.Remove(this);
					}
					this._CatStatusEscolar.Entity = value;
					if ((value != null))
					{
						value.TblEstudios.Add(this);
						this._idEstatus = value.id;
					}
					else
					{
						this._idEstatus = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatStatusEscolar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPerfilEstudio_TblEstudio", Storage="_TblPerfilEstudio", ThisKey="idPerfil", OtherKey="id", IsForeignKey=true)]
		public TblPerfilEstudio TblPerfilEstudio
		{
			get
			{
				return this._TblPerfilEstudio.Entity;
			}
			set
			{
				TblPerfilEstudio previousValue = this._TblPerfilEstudio.Entity;
				if (((previousValue != value) 
							|| (this._TblPerfilEstudio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblPerfilEstudio.Entity = null;
						previousValue.TblEstudios.Remove(this);
					}
					this._TblPerfilEstudio.Entity = value;
					if ((value != null))
					{
						value.TblEstudios.Add(this);
						this._idPerfil = value.id;
					}
					else
					{
						this._idPerfil = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblPerfilEstudio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblDocumentoEstudios(TblDocumentoEstudio entity)
		{
			this.SendPropertyChanging();
			entity.TblEstudio = this;
		}
		
		private void detach_TblDocumentoEstudios(TblDocumentoEstudio entity)
		{
			this.SendPropertyChanging();
			entity.TblEstudio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblFamiliar")]
	public partial class TblFamiliar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombreCompleto;
		
		private string _strDireccion;
		
		private System.Nullable<System.DateTime> _dteFechaNacimiento;
		
		private string _strTelefono;
		
		private int _idParentesco;
		
		private int _idEmpleado;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
		private EntityRef<CatParentesco> _CatParentesco;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreCompletoChanging(string value);
    partial void OnstrNombreCompletoChanged();
    partial void OnstrDireccionChanging(string value);
    partial void OnstrDireccionChanged();
    partial void OndteFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaNacimientoChanged();
    partial void OnstrTelefonoChanging(string value);
    partial void OnstrTelefonoChanged();
    partial void OnidParentescoChanging(int value);
    partial void OnidParentescoChanged();
    partial void OnidEmpleadoChanging(int value);
    partial void OnidEmpleadoChanged();
    #endregion
		
		public TblFamiliar()
		{
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			this._CatParentesco = default(EntityRef<CatParentesco>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombreCompleto", DbType="VarChar(200)")]
		public string strNombreCompleto
		{
			get
			{
				return this._strNombreCompleto;
			}
			set
			{
				if ((this._strNombreCompleto != value))
				{
					this.OnstrNombreCompletoChanging(value);
					this.SendPropertyChanging();
					this._strNombreCompleto = value;
					this.SendPropertyChanged("strNombreCompleto");
					this.OnstrNombreCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDireccion", DbType="VarChar(250)")]
		public string strDireccion
		{
			get
			{
				return this._strDireccion;
			}
			set
			{
				if ((this._strDireccion != value))
				{
					this.OnstrDireccionChanging(value);
					this.SendPropertyChanging();
					this._strDireccion = value;
					this.SendPropertyChanged("strDireccion");
					this.OnstrDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaNacimiento", DbType="Date")]
		public System.Nullable<System.DateTime> dteFechaNacimiento
		{
			get
			{
				return this._dteFechaNacimiento;
			}
			set
			{
				if ((this._dteFechaNacimiento != value))
				{
					this.OndteFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaNacimiento = value;
					this.SendPropertyChanged("dteFechaNacimiento");
					this.OndteFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTelefono", DbType="VarChar(20)")]
		public string strTelefono
		{
			get
			{
				return this._strTelefono;
			}
			set
			{
				if ((this._strTelefono != value))
				{
					this.OnstrTelefonoChanging(value);
					this.SendPropertyChanging();
					this._strTelefono = value;
					this.SendPropertyChanged("strTelefono");
					this.OnstrTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idParentesco", DbType="Int NOT NULL")]
		public int idParentesco
		{
			get
			{
				return this._idParentesco;
			}
			set
			{
				if ((this._idParentesco != value))
				{
					if (this._CatParentesco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidParentescoChanging(value);
					this.SendPropertyChanging();
					this._idParentesco = value;
					this.SendPropertyChanged("idParentesco");
					this.OnidParentescoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int NOT NULL")]
		public int idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblFamiliar", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblFamiliars.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblFamiliars.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(int);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatParentesco_TblFamiliar", Storage="_CatParentesco", ThisKey="idParentesco", OtherKey="id", IsForeignKey=true)]
		public CatParentesco CatParentesco
		{
			get
			{
				return this._CatParentesco.Entity;
			}
			set
			{
				CatParentesco previousValue = this._CatParentesco.Entity;
				if (((previousValue != value) 
							|| (this._CatParentesco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatParentesco.Entity = null;
						previousValue.TblFamiliars.Remove(this);
					}
					this._CatParentesco.Entity = value;
					if ((value != null))
					{
						value.TblFamiliars.Add(this);
						this._idParentesco = value.id;
					}
					else
					{
						this._idParentesco = default(int);
					}
					this.SendPropertyChanged("CatParentesco");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblPerfilEstudios")]
	public partial class TblPerfilEstudio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idEmpleado;
		
		private System.Nullable<int> _idEscolaridad;
		
		private string _urlDocumentos;
		
		private EntitySet<TblEstudio> _TblEstudios;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
		private EntityRef<CatNivelEscolar> _CatNivelEscolar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidEmpleadoChanging(System.Nullable<int> value);
    partial void OnidEmpleadoChanged();
    partial void OnidEscolaridadChanging(System.Nullable<int> value);
    partial void OnidEscolaridadChanged();
    partial void OnurlDocumentosChanging(string value);
    partial void OnurlDocumentosChanged();
    #endregion
		
		public TblPerfilEstudio()
		{
			this._TblEstudios = new EntitySet<TblEstudio>(new Action<TblEstudio>(this.attach_TblEstudios), new Action<TblEstudio>(this.detach_TblEstudios));
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			this._CatNivelEscolar = default(EntityRef<CatNivelEscolar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int")]
		public System.Nullable<int> idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEscolaridad", DbType="Int")]
		public System.Nullable<int> idEscolaridad
		{
			get
			{
				return this._idEscolaridad;
			}
			set
			{
				if ((this._idEscolaridad != value))
				{
					if (this._CatNivelEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEscolaridadChanging(value);
					this.SendPropertyChanging();
					this._idEscolaridad = value;
					this.SendPropertyChanged("idEscolaridad");
					this.OnidEscolaridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_urlDocumentos", DbType="VarChar(50)")]
		public string urlDocumentos
		{
			get
			{
				return this._urlDocumentos;
			}
			set
			{
				if ((this._urlDocumentos != value))
				{
					this.OnurlDocumentosChanging(value);
					this.SendPropertyChanging();
					this._urlDocumentos = value;
					this.SendPropertyChanged("urlDocumentos");
					this.OnurlDocumentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblPerfilEstudio_TblEstudio", Storage="_TblEstudios", ThisKey="id", OtherKey="idPerfil")]
		public EntitySet<TblEstudio> TblEstudios
		{
			get
			{
				return this._TblEstudios;
			}
			set
			{
				this._TblEstudios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblPerfilEstudio", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblPerfilEstudios.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblPerfilEstudios.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatNivelEscolar_TblPerfilEstudio", Storage="_CatNivelEscolar", ThisKey="idEscolaridad", OtherKey="id", IsForeignKey=true)]
		public CatNivelEscolar CatNivelEscolar
		{
			get
			{
				return this._CatNivelEscolar.Entity;
			}
			set
			{
				CatNivelEscolar previousValue = this._CatNivelEscolar.Entity;
				if (((previousValue != value) 
							|| (this._CatNivelEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatNivelEscolar.Entity = null;
						previousValue.TblPerfilEstudios.Remove(this);
					}
					this._CatNivelEscolar.Entity = value;
					if ((value != null))
					{
						value.TblPerfilEstudios.Add(this);
						this._idEscolaridad = value.id;
					}
					else
					{
						this._idEscolaridad = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatNivelEscolar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.TblPerfilEstudio = this;
		}
		
		private void detach_TblEstudios(TblEstudio entity)
		{
			this.SendPropertyChanging();
			entity.TblPerfilEstudio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTarjetaBancaria")]
	public partial class TblTarjetaBancaria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _dteFecha;
		
		private int _idBanco;
		
		private string _intNumeroCuenta;
		
		private string _intNumeroTarjeta;
		
		private int _idMovimiento;
		
		private int _idEmpleado;
		
		private EntityRef<CatBanco> _CatBanco;
		
		private EntityRef<CatEmpleado> _CatEmpleado;
		
		private EntityRef<CatMovimiento> _CatMovimiento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndteFechaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaChanged();
    partial void OnidBancoChanging(int value);
    partial void OnidBancoChanged();
    partial void OnintNumeroCuentaChanging(string value);
    partial void OnintNumeroCuentaChanged();
    partial void OnintNumeroTarjetaChanging(string value);
    partial void OnintNumeroTarjetaChanged();
    partial void OnidMovimientoChanging(int value);
    partial void OnidMovimientoChanged();
    partial void OnidEmpleadoChanging(int value);
    partial void OnidEmpleadoChanged();
    #endregion
		
		public TblTarjetaBancaria()
		{
			this._CatBanco = default(EntityRef<CatBanco>);
			this._CatEmpleado = default(EntityRef<CatEmpleado>);
			this._CatMovimiento = default(EntityRef<CatMovimiento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFecha", DbType="Date")]
		public System.Nullable<System.DateTime> dteFecha
		{
			get
			{
				return this._dteFecha;
			}
			set
			{
				if ((this._dteFecha != value))
				{
					this.OndteFechaChanging(value);
					this.SendPropertyChanging();
					this._dteFecha = value;
					this.SendPropertyChanged("dteFecha");
					this.OndteFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBanco", DbType="Int NOT NULL")]
		public int idBanco
		{
			get
			{
				return this._idBanco;
			}
			set
			{
				if ((this._idBanco != value))
				{
					if (this._CatBanco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBancoChanging(value);
					this.SendPropertyChanging();
					this._idBanco = value;
					this.SendPropertyChanged("idBanco");
					this.OnidBancoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumeroCuenta", DbType="VarChar(100)")]
		public string intNumeroCuenta
		{
			get
			{
				return this._intNumeroCuenta;
			}
			set
			{
				if ((this._intNumeroCuenta != value))
				{
					this.OnintNumeroCuentaChanging(value);
					this.SendPropertyChanging();
					this._intNumeroCuenta = value;
					this.SendPropertyChanged("intNumeroCuenta");
					this.OnintNumeroCuentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumeroTarjeta", DbType="VarChar(100)")]
		public string intNumeroTarjeta
		{
			get
			{
				return this._intNumeroTarjeta;
			}
			set
			{
				if ((this._intNumeroTarjeta != value))
				{
					this.OnintNumeroTarjetaChanging(value);
					this.SendPropertyChanging();
					this._intNumeroTarjeta = value;
					this.SendPropertyChanged("intNumeroTarjeta");
					this.OnintNumeroTarjetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMovimiento", DbType="Int NOT NULL")]
		public int idMovimiento
		{
			get
			{
				return this._idMovimiento;
			}
			set
			{
				if ((this._idMovimiento != value))
				{
					if (this._CatMovimiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMovimientoChanging(value);
					this.SendPropertyChanging();
					this._idMovimiento = value;
					this.SendPropertyChanged("idMovimiento");
					this.OnidMovimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpleado", DbType="Int NOT NULL")]
		public int idEmpleado
		{
			get
			{
				return this._idEmpleado;
			}
			set
			{
				if ((this._idEmpleado != value))
				{
					if (this._CatEmpleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._idEmpleado = value;
					this.SendPropertyChanged("idEmpleado");
					this.OnidEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatBanco_TblTarjetaBancaria", Storage="_CatBanco", ThisKey="idBanco", OtherKey="id", IsForeignKey=true)]
		public CatBanco CatBanco
		{
			get
			{
				return this._CatBanco.Entity;
			}
			set
			{
				CatBanco previousValue = this._CatBanco.Entity;
				if (((previousValue != value) 
							|| (this._CatBanco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatBanco.Entity = null;
						previousValue.TblTarjetaBancarias.Remove(this);
					}
					this._CatBanco.Entity = value;
					if ((value != null))
					{
						value.TblTarjetaBancarias.Add(this);
						this._idBanco = value.id;
					}
					else
					{
						this._idBanco = default(int);
					}
					this.SendPropertyChanged("CatBanco");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpleado_TblTarjetaBancaria", Storage="_CatEmpleado", ThisKey="idEmpleado", OtherKey="id", IsForeignKey=true)]
		public CatEmpleado CatEmpleado
		{
			get
			{
				return this._CatEmpleado.Entity;
			}
			set
			{
				CatEmpleado previousValue = this._CatEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpleado.Entity = null;
						previousValue.TblTarjetaBancarias.Remove(this);
					}
					this._CatEmpleado.Entity = value;
					if ((value != null))
					{
						value.TblTarjetaBancarias.Add(this);
						this._idEmpleado = value.id;
					}
					else
					{
						this._idEmpleado = default(int);
					}
					this.SendPropertyChanged("CatEmpleado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatMovimiento_TblTarjetaBancaria", Storage="_CatMovimiento", ThisKey="idMovimiento", OtherKey="id", IsForeignKey=true)]
		public CatMovimiento CatMovimiento
		{
			get
			{
				return this._CatMovimiento.Entity;
			}
			set
			{
				CatMovimiento previousValue = this._CatMovimiento.Entity;
				if (((previousValue != value) 
							|| (this._CatMovimiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatMovimiento.Entity = null;
						previousValue.TblTarjetaBancarias.Remove(this);
					}
					this._CatMovimiento.Entity = value;
					if ((value != null))
					{
						value.TblTarjetaBancarias.Add(this);
						this._idMovimiento = value.id;
					}
					else
					{
						this._idMovimiento = default(int);
					}
					this.SendPropertyChanged("CatMovimiento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblVehiculo")]
	public partial class TblVehiculo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNumEconomico;
		
		private System.Nullable<System.DateTime> _dteFechaIngreso;
		
		private string _strNumSerie;
		
		private string _strNumMotor;
		
		private string _strCapacidadVehicular;
		
		private string _strColor;
		
		private System.Nullable<int> _intAnio;
		
		private System.Nullable<decimal> _dcePrecioCompra;
		
		private string _strPropietario;
		
		private System.Nullable<int> _intNumeroLlantas;
		
		private string _strMedida;
		
		private string _strCombustible;
		
		private System.Nullable<decimal> _dceKmLitros;
		
		private System.Nullable<decimal> _dceCapacidadCombus;
		
		private System.Nullable<decimal> _dceRendimiento;
		
		private System.Nullable<int> _idTipoVehiculo;
		
		private System.Nullable<int> _idModelo;
		
		private EntityRef<CatModeloVehiculo> _CatModeloVehiculo;
		
		private EntityRef<CatTipoVehiculo> _CatTipoVehiculo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNumEconomicoChanging(string value);
    partial void OnstrNumEconomicoChanged();
    partial void OndteFechaIngresoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaIngresoChanged();
    partial void OnstrNumSerieChanging(string value);
    partial void OnstrNumSerieChanged();
    partial void OnstrNumMotorChanging(string value);
    partial void OnstrNumMotorChanged();
    partial void OnstrCapacidadVehicularChanging(string value);
    partial void OnstrCapacidadVehicularChanged();
    partial void OnstrColorChanging(string value);
    partial void OnstrColorChanged();
    partial void OnintAnioChanging(System.Nullable<int> value);
    partial void OnintAnioChanged();
    partial void OndcePrecioCompraChanging(System.Nullable<decimal> value);
    partial void OndcePrecioCompraChanged();
    partial void OnstrPropietarioChanging(string value);
    partial void OnstrPropietarioChanged();
    partial void OnintNumeroLlantasChanging(System.Nullable<int> value);
    partial void OnintNumeroLlantasChanged();
    partial void OnstrMedidaChanging(string value);
    partial void OnstrMedidaChanged();
    partial void OnstrCombustibleChanging(string value);
    partial void OnstrCombustibleChanged();
    partial void OndceKmLitrosChanging(System.Nullable<decimal> value);
    partial void OndceKmLitrosChanged();
    partial void OndceCapacidadCombusChanging(System.Nullable<decimal> value);
    partial void OndceCapacidadCombusChanged();
    partial void OndceRendimientoChanging(System.Nullable<decimal> value);
    partial void OndceRendimientoChanged();
    partial void OnidTipoVehiculoChanging(System.Nullable<int> value);
    partial void OnidTipoVehiculoChanged();
    partial void OnidModeloChanging(System.Nullable<int> value);
    partial void OnidModeloChanged();
    #endregion
		
		public TblVehiculo()
		{
			this._CatModeloVehiculo = default(EntityRef<CatModeloVehiculo>);
			this._CatTipoVehiculo = default(EntityRef<CatTipoVehiculo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNumEconomico", DbType="VarChar(50)")]
		public string strNumEconomico
		{
			get
			{
				return this._strNumEconomico;
			}
			set
			{
				if ((this._strNumEconomico != value))
				{
					this.OnstrNumEconomicoChanging(value);
					this.SendPropertyChanging();
					this._strNumEconomico = value;
					this.SendPropertyChanged("strNumEconomico");
					this.OnstrNumEconomicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaIngreso", DbType="Date")]
		public System.Nullable<System.DateTime> dteFechaIngreso
		{
			get
			{
				return this._dteFechaIngreso;
			}
			set
			{
				if ((this._dteFechaIngreso != value))
				{
					this.OndteFechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaIngreso = value;
					this.SendPropertyChanged("dteFechaIngreso");
					this.OndteFechaIngresoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNumSerie", DbType="VarChar(50)")]
		public string strNumSerie
		{
			get
			{
				return this._strNumSerie;
			}
			set
			{
				if ((this._strNumSerie != value))
				{
					this.OnstrNumSerieChanging(value);
					this.SendPropertyChanging();
					this._strNumSerie = value;
					this.SendPropertyChanged("strNumSerie");
					this.OnstrNumSerieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNumMotor", DbType="VarChar(100)")]
		public string strNumMotor
		{
			get
			{
				return this._strNumMotor;
			}
			set
			{
				if ((this._strNumMotor != value))
				{
					this.OnstrNumMotorChanging(value);
					this.SendPropertyChanging();
					this._strNumMotor = value;
					this.SendPropertyChanged("strNumMotor");
					this.OnstrNumMotorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCapacidadVehicular", DbType="VarChar(50)")]
		public string strCapacidadVehicular
		{
			get
			{
				return this._strCapacidadVehicular;
			}
			set
			{
				if ((this._strCapacidadVehicular != value))
				{
					this.OnstrCapacidadVehicularChanging(value);
					this.SendPropertyChanging();
					this._strCapacidadVehicular = value;
					this.SendPropertyChanged("strCapacidadVehicular");
					this.OnstrCapacidadVehicularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strColor", DbType="VarChar(50)")]
		public string strColor
		{
			get
			{
				return this._strColor;
			}
			set
			{
				if ((this._strColor != value))
				{
					this.OnstrColorChanging(value);
					this.SendPropertyChanging();
					this._strColor = value;
					this.SendPropertyChanged("strColor");
					this.OnstrColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intAnio", DbType="Int")]
		public System.Nullable<int> intAnio
		{
			get
			{
				return this._intAnio;
			}
			set
			{
				if ((this._intAnio != value))
				{
					this.OnintAnioChanging(value);
					this.SendPropertyChanging();
					this._intAnio = value;
					this.SendPropertyChanged("intAnio");
					this.OnintAnioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dcePrecioCompra", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dcePrecioCompra
		{
			get
			{
				return this._dcePrecioCompra;
			}
			set
			{
				if ((this._dcePrecioCompra != value))
				{
					this.OndcePrecioCompraChanging(value);
					this.SendPropertyChanging();
					this._dcePrecioCompra = value;
					this.SendPropertyChanged("dcePrecioCompra");
					this.OndcePrecioCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPropietario", DbType="VarChar(100)")]
		public string strPropietario
		{
			get
			{
				return this._strPropietario;
			}
			set
			{
				if ((this._strPropietario != value))
				{
					this.OnstrPropietarioChanging(value);
					this.SendPropertyChanging();
					this._strPropietario = value;
					this.SendPropertyChanged("strPropietario");
					this.OnstrPropietarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intNumeroLlantas", DbType="Int")]
		public System.Nullable<int> intNumeroLlantas
		{
			get
			{
				return this._intNumeroLlantas;
			}
			set
			{
				if ((this._intNumeroLlantas != value))
				{
					this.OnintNumeroLlantasChanging(value);
					this.SendPropertyChanging();
					this._intNumeroLlantas = value;
					this.SendPropertyChanged("intNumeroLlantas");
					this.OnintNumeroLlantasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strMedida", DbType="VarChar(50)")]
		public string strMedida
		{
			get
			{
				return this._strMedida;
			}
			set
			{
				if ((this._strMedida != value))
				{
					this.OnstrMedidaChanging(value);
					this.SendPropertyChanging();
					this._strMedida = value;
					this.SendPropertyChanged("strMedida");
					this.OnstrMedidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCombustible", DbType="VarChar(100)")]
		public string strCombustible
		{
			get
			{
				return this._strCombustible;
			}
			set
			{
				if ((this._strCombustible != value))
				{
					this.OnstrCombustibleChanging(value);
					this.SendPropertyChanging();
					this._strCombustible = value;
					this.SendPropertyChanged("strCombustible");
					this.OnstrCombustibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceKmLitros", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceKmLitros
		{
			get
			{
				return this._dceKmLitros;
			}
			set
			{
				if ((this._dceKmLitros != value))
				{
					this.OndceKmLitrosChanging(value);
					this.SendPropertyChanging();
					this._dceKmLitros = value;
					this.SendPropertyChanged("dceKmLitros");
					this.OndceKmLitrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceCapacidadCombus", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceCapacidadCombus
		{
			get
			{
				return this._dceCapacidadCombus;
			}
			set
			{
				if ((this._dceCapacidadCombus != value))
				{
					this.OndceCapacidadCombusChanging(value);
					this.SendPropertyChanging();
					this._dceCapacidadCombus = value;
					this.SendPropertyChanged("dceCapacidadCombus");
					this.OndceCapacidadCombusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dceRendimiento", DbType="Decimal(18,7)")]
		public System.Nullable<decimal> dceRendimiento
		{
			get
			{
				return this._dceRendimiento;
			}
			set
			{
				if ((this._dceRendimiento != value))
				{
					this.OndceRendimientoChanging(value);
					this.SendPropertyChanging();
					this._dceRendimiento = value;
					this.SendPropertyChanged("dceRendimiento");
					this.OndceRendimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoVehiculo", DbType="Int")]
		public System.Nullable<int> idTipoVehiculo
		{
			get
			{
				return this._idTipoVehiculo;
			}
			set
			{
				if ((this._idTipoVehiculo != value))
				{
					if (this._CatTipoVehiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoVehiculoChanging(value);
					this.SendPropertyChanging();
					this._idTipoVehiculo = value;
					this.SendPropertyChanged("idTipoVehiculo");
					this.OnidTipoVehiculoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idModelo", DbType="Int")]
		public System.Nullable<int> idModelo
		{
			get
			{
				return this._idModelo;
			}
			set
			{
				if ((this._idModelo != value))
				{
					if (this._CatModeloVehiculo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidModeloChanging(value);
					this.SendPropertyChanging();
					this._idModelo = value;
					this.SendPropertyChanged("idModelo");
					this.OnidModeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatModeloVehiculo_TblVehiculo", Storage="_CatModeloVehiculo", ThisKey="idModelo", OtherKey="id", IsForeignKey=true)]
		public CatModeloVehiculo CatModeloVehiculo
		{
			get
			{
				return this._CatModeloVehiculo.Entity;
			}
			set
			{
				CatModeloVehiculo previousValue = this._CatModeloVehiculo.Entity;
				if (((previousValue != value) 
							|| (this._CatModeloVehiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatModeloVehiculo.Entity = null;
						previousValue.TblVehiculos.Remove(this);
					}
					this._CatModeloVehiculo.Entity = value;
					if ((value != null))
					{
						value.TblVehiculos.Add(this);
						this._idModelo = value.id;
					}
					else
					{
						this._idModelo = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatModeloVehiculo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatTipoVehiculo_TblVehiculo", Storage="_CatTipoVehiculo", ThisKey="idTipoVehiculo", OtherKey="id", IsForeignKey=true)]
		public CatTipoVehiculo CatTipoVehiculo
		{
			get
			{
				return this._CatTipoVehiculo.Entity;
			}
			set
			{
				CatTipoVehiculo previousValue = this._CatTipoVehiculo.Entity;
				if (((previousValue != value) 
							|| (this._CatTipoVehiculo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatTipoVehiculo.Entity = null;
						previousValue.TblVehiculos.Remove(this);
					}
					this._CatTipoVehiculo.Entity = value;
					if ((value != null))
					{
						value.TblVehiculos.Add(this);
						this._idTipoVehiculo = value.id;
					}
					else
					{
						this._idTipoVehiculo = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatTipoVehiculo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatNacionalidad")]
	public partial class CatNacionalidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private EntitySet<CatEmpleado> _CatEmpleados;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    #endregion
		
		public CatNacionalidad()
		{
			this._CatEmpleados = new EntitySet<CatEmpleado>(new Action<CatEmpleado>(this.attach_CatEmpleados), new Action<CatEmpleado>(this.detach_CatEmpleados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatNacionalidad_CatEmpleado", Storage="_CatEmpleados", ThisKey="id", OtherKey="idNacionalidad")]
		public EntitySet<CatEmpleado> CatEmpleados
		{
			get
			{
				return this._CatEmpleados;
			}
			set
			{
				this._CatEmpleados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatEmpleados(CatEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.CatNacionalidad = this;
		}
		
		private void detach_CatEmpleados(CatEmpleado entity)
		{
			this.SendPropertyChanging();
			entity.CatNacionalidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatEmpresa")]
	public partial class CatEmpresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strRfc;
		
		private string _strDireccionFiscal;
		
		private int _idTelefono;
		
		private string _strEmail;
		
		private string _strFax;
		
		private EntitySet<CatProyectoEmpresa> _CatProyectoEmpresas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrRfcChanging(string value);
    partial void OnstrRfcChanged();
    partial void OnstrDireccionFiscalChanging(string value);
    partial void OnstrDireccionFiscalChanged();
    partial void OnidTelefonoChanging(int value);
    partial void OnidTelefonoChanged();
    partial void OnstrEmailChanging(string value);
    partial void OnstrEmailChanged();
    partial void OnstrFaxChanging(string value);
    partial void OnstrFaxChanged();
    #endregion
		
		public CatEmpresa()
		{
			this._CatProyectoEmpresas = new EntitySet<CatProyectoEmpresa>(new Action<CatProyectoEmpresa>(this.attach_CatProyectoEmpresas), new Action<CatProyectoEmpresa>(this.detach_CatProyectoEmpresas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(350) NOT NULL", CanBeNull=false)]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strRfc", DbType="VarChar(250)")]
		public string strRfc
		{
			get
			{
				return this._strRfc;
			}
			set
			{
				if ((this._strRfc != value))
				{
					this.OnstrRfcChanging(value);
					this.SendPropertyChanging();
					this._strRfc = value;
					this.SendPropertyChanged("strRfc");
					this.OnstrRfcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDireccionFiscal", DbType="VarChar(550)")]
		public string strDireccionFiscal
		{
			get
			{
				return this._strDireccionFiscal;
			}
			set
			{
				if ((this._strDireccionFiscal != value))
				{
					this.OnstrDireccionFiscalChanging(value);
					this.SendPropertyChanging();
					this._strDireccionFiscal = value;
					this.SendPropertyChanged("strDireccionFiscal");
					this.OnstrDireccionFiscalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelefono", DbType="Int NOT NULL")]
		public int idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEmail", DbType="VarChar(250)")]
		public string strEmail
		{
			get
			{
				return this._strEmail;
			}
			set
			{
				if ((this._strEmail != value))
				{
					this.OnstrEmailChanging(value);
					this.SendPropertyChanging();
					this._strEmail = value;
					this.SendPropertyChanged("strEmail");
					this.OnstrEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFax", DbType="VarChar(50)")]
		public string strFax
		{
			get
			{
				return this._strFax;
			}
			set
			{
				if ((this._strFax != value))
				{
					this.OnstrFaxChanging(value);
					this.SendPropertyChanging();
					this._strFax = value;
					this.SendPropertyChanged("strFax");
					this.OnstrFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpresa_CatProyectoEmpresa", Storage="_CatProyectoEmpresas", ThisKey="id", OtherKey="idEmpresa")]
		public EntitySet<CatProyectoEmpresa> CatProyectoEmpresas
		{
			get
			{
				return this._CatProyectoEmpresas;
			}
			set
			{
				this._CatProyectoEmpresas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CatProyectoEmpresas(CatProyectoEmpresa entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpresa = this;
		}
		
		private void detach_CatProyectoEmpresas(CatProyectoEmpresa entity)
		{
			this.SendPropertyChanging();
			entity.CatEmpresa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatProyectoEmpresa")]
	public partial class CatProyectoEmpresa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strNumeroContrato;
		
		private System.Nullable<int> _idEmpresa;
		
		private EntityRef<CatEmpresa> _CatEmpresa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrNumeroContratoChanging(string value);
    partial void OnstrNumeroContratoChanged();
    partial void OnidEmpresaChanging(System.Nullable<int> value);
    partial void OnidEmpresaChanged();
    #endregion
		
		public CatProyectoEmpresa()
		{
			this._CatEmpresa = default(EntityRef<CatEmpresa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="VarChar(350)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNumeroContrato", DbType="VarChar(250)")]
		public string strNumeroContrato
		{
			get
			{
				return this._strNumeroContrato;
			}
			set
			{
				if ((this._strNumeroContrato != value))
				{
					this.OnstrNumeroContratoChanging(value);
					this.SendPropertyChanging();
					this._strNumeroContrato = value;
					this.SendPropertyChanged("strNumeroContrato");
					this.OnstrNumeroContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpresa", DbType="Int")]
		public System.Nullable<int> idEmpresa
		{
			get
			{
				return this._idEmpresa;
			}
			set
			{
				if ((this._idEmpresa != value))
				{
					if (this._CatEmpresa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEmpresaChanging(value);
					this.SendPropertyChanging();
					this._idEmpresa = value;
					this.SendPropertyChanged("idEmpresa");
					this.OnidEmpresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CatEmpresa_CatProyectoEmpresa", Storage="_CatEmpresa", ThisKey="idEmpresa", OtherKey="id", IsForeignKey=true)]
		public CatEmpresa CatEmpresa
		{
			get
			{
				return this._CatEmpresa.Entity;
			}
			set
			{
				CatEmpresa previousValue = this._CatEmpresa.Entity;
				if (((previousValue != value) 
							|| (this._CatEmpresa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CatEmpresa.Entity = null;
						previousValue.CatProyectoEmpresas.Remove(this);
					}
					this._CatEmpresa.Entity = value;
					if ((value != null))
					{
						value.CatProyectoEmpresas.Add(this);
						this._idEmpresa = value.id;
					}
					else
					{
						this._idEmpresa = default(Nullable<int>);
					}
					this.SendPropertyChanged("CatEmpresa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
